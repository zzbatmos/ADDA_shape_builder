function Gaussian_Sphere(gs_vtk_file,maxD,wvl,dpl,adda_geom_file)
% read in the vertices and faces information from .vtk file
fid = fopen(gs_vtk_file);
nheader = 4;
for l=1:nheader
    tline = fgetl(fid);
    disp(tline)
end
tline = fgetl(fid);
str1 = regexprep(tline,'POINTS', ' ');
str2 = regexprep(str1,'float', ' ');
Nv = str2num(str2);
V  = zeros(Nv, 3);
for l = 1:Nv
    V(l,:) = str2num(fgetl(fid));
end
tline = fgetl(fid)
str1 = regexprep(tline,'POLYGONS', ' ');
f=str2num(str1)
Nf=f(1);
F = zeros(Nf, 3);
for l = 1:Nf
    x = str2num(fgetl(fid));
    F(l,:) = x(2:4) + 1;
end
fclose(fid);
% create patch object in matlab
gs.vertices=V  
gs.faces=F
% compute the maximum dimension of the gs
gs_maxD=0;
for m = 1:Nv
    for n = m:Nv
        D=sum((gs.vertices(m,:)-gs.vertices(n,:)).^2);
        if D>gs_maxD
            gs_maxD = D;
        end
    end
end
gs_maxD = sqrt(gs_maxD);

gs.vertices = gs.vertices/gs_maxD * maxD;
dD = wvl/dpl;
dr = dD/2;
N = ceil((max(gs.vertices)-min(gs.vertices))/dr);
r0 = min(gs.vertices);
pts=zeros(N(1)*N(2)*N(3),3);
n=0;
for ix=1:N(1)
    for iy=1:N(2)
        for iz=1:N(3)
            n=n+1;
            pts(n,1)=r0(1)+ix*dr;
            pts(n,2)=r0(2)+iy*dr;
            pts(n,3)=r0(3)+iz*dr;
        end
    end
end
            

inside_gs = inpolyhedron(gs, pts);     % Test which are inside the patch
fig=figure('visible','off'), hold on, view(3)        % Display the result
patch(gs,'FaceColor','g','FaceAlpha',0.2)
plot3(pts(inside_gs,1),pts(inside_gs,2),pts(inside_gs,3),'bo','MarkerFaceColor','b')
saveas(fig,'Gaussian_sphere','jpg');

fileID = fopen(adda_geom_file,'w');
fprintf(fileID,'#generated by Zhibo Zhang MATLAB script\n');
fprintf(fileID,'#shape: Gaussian Random Sphere\n');
fprintf(fileID,'#shape: #box size %i x %i x %i:\n',N(1),N(2),N(3));
n=0;
for ix=1:N(1)
    for iy=1:N(2)
        for iz=1:N(3)
            n=n+1;
            if inside_gs(n)
                fprintf(fileID,'%i  %i  %i:\n',ix-1,iy-1,iz-1);
            end
        end
    end
end
fclose(fileID);
%plot3(pts(~in,1),pts(~in,2),pts(~in,3),'ro'), axis image

